------------------Trabalho Pratico: Programação e Desenvolvimento de Softwares---------------------------------

Nome do Projeto - guitarra herois
Aluno: Mateus Simonetti

OBJETIVO:
Tocar a musica inteira, pressionando as teclas 'A' (primeira pista), 'S'(segunda pista),
'J' (terceira pista), 'K' (quarta pista) ou 'L'(quinta pista) para tocar as notas que des-
cem para cada uma destas pistas. Além disso, o jogadore deve manter o indicador de vida 
o mais afastado possível da zona de eliminação. Caso não consiga, o jogador perderá.

DETALHES SOBRE AS FUNÇÕES

OBS: Grande parte das linhas estão comentadas e podem auxiliar no entendimento do explici-
tado abaixo.

- Até a linha 78: set de variáveis globais (flags, ponteiros para audio, struct de nota)

- draw_scenario: desenha a base do cenário: pistas, fundo preto, barra de vida, região 
crítica e detalhes.

-zera_tiles: seta todas as nots como "mortas" (status = 0)

-check_end: checa se a ultima tecla foi impressa e se esta está abaixo da regiao crítica.
Finaliza o jogo em caso afirmativo.

-create_tile: caso a nota já não exista e não seja a "nota de parada" do programa, cria uma 
nota no topo da pista passada por parâmetro. Se for a "nota de parada", seta o flag de fim 
de jogo

-draw_tiles: Caso a nota passada por referência para essa função já tenha sido criada (status
== 1), desenha a nota um pouco abaixo do que ela estava.

-check_tiles: Checa se a nota passada por referência está abaixo da região crítica. Em caso a-
firmativo, executa o sample de derrota, subtrai o score e reduz a barra de vida

-check_position: Verifica se uma nota passada por referência está na região crítica. Em caso a-
firmativo, zera o status da nota e retorna 1. Caso contrário, retorna 0.

-bar_control: Desenha o marcador da barra de vida de acordo com os acertos ou erros do jogador.

-abreMusica: escolhe qual dos arquivos de texto (que contem as informações sobre o nascimento 
das notas) o usuario irá tocar baseando na musica que ele irá jogar.

-escolheMusica: aponta o ponteiro musica para o arquivo .ogg equivalente à música selecionada.

Main

-das linhas 211 a 219: inicializações.

-221 a 239: passa as informações do arquivo escolhido em abreMusica para uma matriz e, em se-
guida, fecha o arquivo.

-238 e 239: seta o status de todas as notas do vetor de notas (TILE_OPT) para 0

-240 a 315: rotinas de inicialização e atualiza a tela. Após, chama a função de escolha de mú-
sica, seta o flag "playing" e habilita as interrupções para eventos. 


-QUANDO HOUVER UM CLIQUE: avalia qual lane foi clicada e lê todas as posições do vetor que são
daquela lane. Caso haja alguma nota no range crítico, o jogador ganha um ponto. Caso contrário,
ele perde um (a sobreposição é evitada pela lógica da música: coloquei todas as notas em ordem
crescente de id para que, ao encontrar uma nota, a lógica saia do loop sem considerar a proxima
nota).

-QUANDO HOUVER UM EVENTO DE TIMER: cria, desenha, avalia posicionamento e final de jogo seguindo 
os parâmetros passados pela mattriz que armazena a informação das notas.

-QUANDO HOUVER UM CLIQUE EM ESC OU NO 'X': encerra o jogo, mostrando o score ou o final do jogo


-486 a 530: Correspondem ao encerramento do jogo. Caso o fim de jogo tenha sido forçado (ESC ou X)
encerra mais rapidamente, sem vitoria ou derrota. Em caso de vitoria, informa o score, o record e to-
ca a "musica da vitoria" (Caso o record tenha sido quebrado, o jogador é informado). Em caso de derro-
ta, mostra a pontuação, o score e toca a "musica da derrota"

-531 a 541: uninstall's e destroy's.  






    






  
